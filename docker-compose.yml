services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tj-oms-postgres
    environment:
      POSTGRES_DB: tj_oms
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Streams
  redis:
    image: redis:7-alpine
    container_name: tj-oms-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # EMQX MQTT Broker
  emqx:
    image: emqx/emqx:5.3.0
    container_name: tj-oms-emqx
    ports:
      - "1883:1883"   # MQTT
      - "8883:8883"   # MQTT/SSL
      - "8083:8083"   # MQTT/WebSocket
      - "8084:8084"   # MQTT/WebSocket/SSL
      - "18083:18083" # Dashboard
    environment:
      EMQX_NAME: emqx
      EMQX_HOST: localhost
    volumes:
      - emqx_data:/opt/emqx/data
      - emqx_log:/opt/emqx/log

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tj-oms-backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/tj_oms
      REDIS_URL: redis://redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MQTT_URL: mqtt://emqx:1883
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    # volumes:
    #   - ./backend:/app
    #   - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (simplified for testing)
  frontend:
    image: nginx:alpine
    container_name: tj-oms-frontend
    ports:
      - "3002:80"
    volumes:
      - ./frontend/public:/usr/share/nginx/html
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Commander (Web UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: tj-oms-redis-commander
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Adminer (Database Admin)
  adminer:
    image: adminer:latest
    container_name: tj-oms-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  emqx_data:
  emqx_log:
